services:
{% for i in range(n_parties) %}
  p{{ i+1 }}:
    image: {{protocol}}-core:latest
    hostname: p{{ i+1 }}
    cap_add:
      - NET_ADMIN
    command:
      - "moby"
    environment:
      - RUST_BACKTRACE=1
      - RUN_MODE=dev
      - RUST_LOG=info
      - NO_COLOR=true
      - DDEC__PROTOCOL__HOST__ADDRESS=p{{ i+1 }}
      - DDEC__PROTOCOL__HOST__PORT=50000
      - DDEC__PROTOCOL__HOST__ID={{ i+1 }}
      - DDEC__PROTOCOL__HOST__CHOREOPORT=60000
      - DDEC__TELEMETRY__TRACING_SERVICE_NAME=moby-party-{{ i+1 }}
      - DDEC__TELEMETRY__TRACING_ENDPOINT=http://otel-collector:4317
      - DDEC__TELEMETRY__BATCH__MAX_QUEUE_SIZE=8192
      - DDEC__TELEMETRY__BATCH__MAX_EXPORT_BATCH_SIZE=2048
      - DDEC__TELEMETRY__BATCH__MAX_CONCURRENT_EXPORTS=2
      - DDEC__TELEMETRY__BATCH__SCHEDULED_DELAY_MS=100
      - DDEC__TELEMETRY__BATCH__EXPORT_TIMEOUT_MS=5000
      - DDEC__REDIS__HOST=redis://redis-p{{ i+1 }}:6379
      - DDEC__CERTPATHS__CERT=/app/ddec/certs/cert_p{{ i+1 }}.pem
      - DDEC__CERTPATHS__KEY=/app/ddec/certs/key_p{{ i+1 }}.pem
      - DDEC__CERTPATHS__CALIST={% for j in range(n_parties) %}/app/ddec/certs/cert_p{{ j+1 }}.pem,{% endfor %}
    volumes:
      - ../parameters:/app/ddec/parameters
      - ../test_certs:/app/ddec/certs
      - ../docker/scripts:/app/ddec/scripts
    ports:
      - {{ 50000 + i+1 }}:50000
      - {{ 60000 + i+1 }}:60000
    healthcheck:
      test: "grpc-health-probe -tls -tls-ca-cert /app/ddec/certs/cert_p{{ i+1 }}.pem -tls-client-cert /app/ddec/certs/cert_p{{ i+1 }}.pem -tls-client-key /app/ddec/certs/key_p{{ i+1 }}.pem --addr=localhost:50000"
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s
  redis-p{{ i+1 }}:
    image: redis/redis-stack:latest
    command: redis-server --save "" --appendonly no --protected-mode no
    ports:
      - {{6379 + i+1}}:6379
{% endfor %}
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686"
    environment:
      - LOG_LEVEL=error
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ../experiments/templates/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
      - ../temp/telemetry/:/exports
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
